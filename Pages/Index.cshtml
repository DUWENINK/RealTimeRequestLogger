@page
@model IndexModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <!-- 本地 Tailwind CSS -->
    <link rel="stylesheet" href="~/css/tailwind.min.css">
    <style>
        /* 调整的样式 */
        .log-container {
            height: calc(100vh - 200px); /* 使表格占满全屏 */
            width: 100%;
            overflow-y: auto;
            background-color: #f8f9fa;
            padding: 10px;
            border-radius: 8px;
            border: 1px solid #ddd;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px;
            border-bottom: 1px solid #e2e8f0;
            text-align: left;
        }

        th {
            background-color: #edf2f7;
            color: #2d3748;
            position: sticky;
            top: 0;
            z-index: 1;
        }

        tr:nth-child(even) {
            background-color: #f7fafc;
        }

        tr:hover {
            background-color: #ebf8ff;
        }

        /* 按钮样式 */
        .btn {
            display: inline-block;
            padding: 10px 20px;
            font-size: 14px;
            font-weight: bold;
            text-align: center;
            border-radius: 5px;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer;
        }

        .btn-red {
            background-color: #e53e3e;
            color: white;
        }

            .btn-red:hover {
                background-color: #c53030;
            }

        .btn-blue {
            background-color: #3182ce;
            color: white;
        }

            .btn-blue:hover {
                background-color: #2b6cb0;
            }

        .btn-green {
            background-color: #38a169;
            color: white;
        }

            .btn-green:hover {
                background-color: #2f855a;
            }

        .btn {
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* 时间戳样式 */
        .timestamp {
            font-family: monospace;
            color: #718096;
        }

        /* 弹窗样式 */
        #keyModal {
            display: flex;
            justify-content: center;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        #keyModalContent {
            background: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* 显示当前 customKey */
        #currentKey {
            font-size: 18px;
            font-weight: bold;
            color: #2b6cb0;
        }

        /* curl 示例 */
        #curlExample {
            font-family: monospace;
            background-color: #f1f1f1;
            padding: 10px;
            margin-top: 10px;
            border-radius: 5px;
        }

    </style>
</head>
<body class="bg-gray-100">

    <div class="container mx-auto py-8">
        <h1 class="text-3xl font-bold text-center mb-8" id="page-title">实时请求日志记录</h1>

        <!-- 显示当前 customKey -->
        <div class="text-center mb-4">
            当前 Key: <span id="currentKey">无</span>
        </div>

        <!-- 操作按钮 -->
        <div class="flex justify-end mb-4 space-x-2">
            <button id="changeKeyBtn" class="btn btn-green">
                更换 Key
            </button>
            <button id="clearLogsBtn" class="btn btn-red">
                清空日志
            </button>
            <button id="downloadLogsBtn" class="btn btn-blue">
                下载日志
            </button>
        </div>

        <!-- 请求日志表格 -->
        <div class="bg-white shadow-md rounded-lg p-4 log-container">
            <table class="table-auto">
                <thead>
                    <tr>
                        <th id="th-timestamp">时间戳</th>
                        <th id="th-method">方法</th>
                        <th id="th-path">路径</th>
                        <th id="th-query">查询字符串</th>
                        <th id="th-headers">请求头</th>
                        <th id="th-body">请求体</th>
                    </tr>
                </thead>
                <tbody id="logTable" class="text-gray-600 text-sm font-light">
                    <!-- 实时数据将被插入到这里 -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- 用户自定义key弹窗 -->
    <div id="keyModal">
        <div id="keyModalContent">
            <h2 class="text-lg font-bold mb-4">请输入您的自定义 Key</h2>
            <input type="text" id="customKey" class="border border-gray-300 p-2 w-full rounded mb-4" placeholder="请输入自定义 key">
            <button id="saveKeyBtn" class="btn btn-blue w-full">保存</button>
            <!-- curl 示例 -->
            <div id="curlExample" class="mt-4"></div>
        </div>
    </div>

    <!-- 本地 SignalR JS -->
    <script src="~/js/signalr.min.js"></script>
    <script type="text/javascript">
        let logData = [];
        let customKey = null; // 自定义key
        let connection = null; // SignalR 连接实例

        document.addEventListener("DOMContentLoaded", function () {
            const keyModal = document.getElementById("keyModal");
            const saveKeyBtn = document.getElementById("saveKeyBtn");
            const currentKeyDisplay = document.getElementById("currentKey");
            const curlExample = document.getElementById("curlExample");
            const apiBaseUrl = "http://IP:port";  // 替换为实际的 API 地址和端口

            // 更新 curl 示例
            function updateCurlExample(key) {
                curlExample.innerText = `curl "${apiBaseUrl}/api/endpoint?customKey=${key}"`;
            }

            saveKeyBtn.addEventListener("click", function () {
                const newKey = document.getElementById("customKey").value;
                if (newKey) {
                    localStorage.setItem('customKey', newKey); // 保存自定义key
                    currentKeyDisplay.textContent = newKey; // 更新显示

                    if (connection) {
                        connection.stop(); // 断开现有连接
                    }

                    customKey = newKey;
                    keyModal.style.display = 'none'; // 隐藏弹窗

                    startSignalRConnection(customKey); // 启动新的 SignalR 连接
                    updateCurlExample(customKey); // 更新 curl 示例
                }
            });

            // 检查是否有保存的自定义key
            const savedKey = localStorage.getItem('customKey');
            if (savedKey) {
                customKey = savedKey;
                currentKeyDisplay.textContent = customKey; // 显示当前 Key
                startSignalRConnection(customKey); // 启动 SignalR 连接
                updateCurlExample(customKey); // 更新 curl 示例
            } else {
                keyModal.style.display = 'flex'; // 如果没有key，显示弹窗
            }

            // 更换 key 按钮
            document.getElementById('changeKeyBtn').addEventListener('click', function () {
                keyModal.style.display = 'flex'; // 显示弹窗
            });
        });

        function startSignalRConnection(customKey) {
            // 初始化并连接到 SignalR
            connection = new signalR.HubConnectionBuilder()
                .withUrl(`/requestHub?customKey=${customKey}`)
                .build();

            connection.start().then(function () {
                // 注册用户
                connection.invoke("RegisterUser", customKey);
            }).catch(function (err) {
                return console.error(err.toString());
            });

            // 处理接收到的请求详情
            connection.on("ReceiveRequestDetails", function (message) {
                const logTable = document.getElementById("logTable");
                const timestamp = new Date().toLocaleTimeString();
                const lines = message.split("\n");
                const methodLine = lines.find(line => line.startsWith("Method:"));
                const pathLine = lines.find(line => line.startsWith("Path:"));
                const queryString = lines.find(line => line.startsWith("Query String:"));
                const headersLine = lines.slice(lines.indexOf("Headers:") + 1, lines.indexOf("Body:")).join("<br>");
                const bodyLine = lines.slice(lines.indexOf("Body:") + 1).join("<br>");

                const newRow = document.createElement("tr");
                newRow.className = "border-b border-gray-200 hover:bg-gray-100";
                newRow.innerHTML = `
                                    <td class="timestamp">${timestamp}</td>
                                    <td>${methodLine.replace("Method: ", "")}</td>
                                    <td>${pathLine.replace("Path: ", "")}</td>
                                    <td>${queryString ? queryString.replace("Query String: ", "") : ""}</td>
                                    <td>${headersLine}</td>
                                    <td>${bodyLine}</td>
                                `;

                logTable.appendChild(newRow);

                // 记录日志
                logData.push({
                    timestamp,
                    method: methodLine.replace("Method: ", ""),
                    path: pathLine.replace("Path: ", ""),
                    queryString: queryString ? queryString.replace("Query String: ", "") : "",
                    headers: headersLine,
                    body: bodyLine
                });
            });
        }

        document.getElementById("clearLogsBtn").addEventListener("click", function () {
            document.getElementById("logTable").innerHTML = "";  // 清空表格
            logData = [];  // 清空日志数据
        });

        document.getElementById("downloadLogsBtn").addEventListener("click", function () {
            const blob = new Blob([JSON.stringify(logData, null, 2)], { type: "application/json" });
            const link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "request-logs.json";
            link.click();
        });
    </script>
</body>
</html>
